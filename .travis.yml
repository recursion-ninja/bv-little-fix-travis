language: generic

matrix:
  include:
    # MacOS builds
    - compiler: "ghc-8.0.2"
      env: GHCVER=8.0.2
      os: osx
    
    - compiler: "ghc-8.2.2"
      env: GHCVER=8.2.2
      os: osx

    # Linux builds
    - compiler: "ghc-7.10.3"
      os: linux
      sudo: false
      addons: {apt: {packages: [cabal-install-1.24, ghc-7.10.3],sources: [hvr-ghc]}}
   
    - compiler: "ghc-8.0.2"
      os: linux
      sudo: false
      addons: {apt: {packages: [cabal-install-1.24, ghc-8.0.2], sources: [hvr-ghc]}}
    
    - compiler: "ghc-8.2.2"
      os: linux
      sudo: false
      addons: {apt: {packages: [cabal-install-1.24, ghc-8.2.2], sources: [hvr-ghc]}}
    
    - compiler: "ghc-8.4.1"
      env: $GHCHEAD=true
      os: linux
      sudo: false
      addons: {apt: {packages: [cabal-install-1.24, ghc-8.4.1], sources: [hvr-ghc]}}

  allow_failures:
    - compiler: "ghc-8.4.1"

before_install:
  # MacOS setups
  # Install specific GHC version
  - if [[ "$TRAVIS_OS_NAME" == "osx" && "$GHCVER" == "8.0.2" ]]; then brew install ghc@8.0 cabal-install && export PATH=/usr/local/opt/ghc@8.0/bin:$PATH; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" && "$GHCVER" == "8.2.2" ]]; then brew install ghc     cabal-install && export PATH=/usr/local/opt/ghc/bin:$PATH; fi

  # Linux setups initial setup
  # Export PATH to specific GHC & Cabal version specific programs
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      GHCVERDIR=$(   ls /opt/ghc   | grep -E '[0-9]+\.[0-9]+\.[0-9]+' | head -1 )
      CABALVERDIR=$( ls /opt/cabal | grep -E '[0-9]+\.[0-9]+'         | head -1 )
      export PATH=/opt/ghc/$GHCVERDIR/bin:/opt/cabal/$CABALVERDIR/bin:$PATH
    fi

install:
  # Preliminary output and setup
  - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
  - cabal --version
  - cabal update

  # Overlay Hackage Package Index for GHC HEAD: https://github.com/hvr/head.hackage
  - GHCHEAD=${GHCHEAD-false}
  - |
    if $GHCHEAD; then
      sed -i.bak 's/^jobs:/-- jobs:/' ${HOME}/.cabal/config
      sed -i.bak 's/-- allow-newer:.*/allow-newer: base, template-haskell, ghc, Cabal/' ${HOME}/.cabal/config
      cat ${HOME}/.cabal/config
      echo 'repository head.hackage'                                                        >> ${HOME}/.cabal/config
      echo '   url: http://head.hackage.haskell.org/'                                       >> ${HOME}/.cabal/config
      echo '   secure: True'                                                                >> ${HOME}/.cabal/config
      echo '   root-keys: 07c59cb65787dedfaef5bd5f987ceb5f7e5ebf88b904bbd4c5cbdeb2ff71b740' >> ${HOME}/.cabal/config
      echo '              2e8555dde16ebd8df076f1a8ef13b8f14c66bad8eafefd7d9e37d0ed711821fb' >> ${HOME}/.cabal/config
      echo '              8f79fd2389ab2967354407ec852cbe73f2e8635793ac446d09461ffb99527f6e' >> ${HOME}/.cabal/config
      echo '   key-threshold: 3'                                                            >> ${HOME}/.cabal.config
      cabal update -v
    fi

  # Install dependencies and utility programs
  - cabal install --enable-benchmarks --enable-tests --only-dependencies
  - cabal install hpc
  - cabal install hpc-coveralls

script:
  - cabal configure --enable-coverage --enable-benchmarks --enable-tests
  - cabal sdist
  - cabal build
  - cabal test --show-details=always
  - cabal check
  - cabal haddock

after_script:
  - export PATH=~/.cabal/bin:$PATH
  - hpc-coveralls --coverage-mode=StrictlyFullLines
                  --exclude-dir=bench
                  --exclude-dir=tests
                  test-suite

cache:
  directories:
    - ~/.ghc
    - ~/.cabal

git:
  submodules: false
 
notifications:
  email: false

